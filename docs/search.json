[
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "3Â  Results",
    "section": "",
    "text": "Code\n## Income\n\n#'Percent of adults who report consuming fruit less than one time daily'\n\nIncomeQuestion &lt;- function(df, Question1) {\n\ndf_fruit1 &lt;- df %&gt;%\n    filter(Question == Question1) %&gt;% filter(Category == 'Income') %&gt;% filter (YearStart == \"2021\") %&gt;% group_by(CategoryVal) %&gt;%\n    summarize(Sum_Column1 = sum(Sample,na.rm = TRUE), Sum_Column2 = sum(SampleSize,na.rm = TRUE))\n\ndf_fruit1$Value &lt;- df_fruit1$Sum_Column1 / df_fruit1$Sum_Column2\n\ndf_fruit1 &lt;- df_fruit1 %&gt;% filter(CategoryVal!='Data not reported')\n\nlevel_order &lt;- c(\n  \"Less than $15,000\",\n  \"$15,000 - $24,999\",\n  \"$25,000 - $34,999\",\n  \"$35,000 - $49,999\",\n  \"$50,000 - $74,999\",\n  \"$75,000 or greater\"\n)\n\n# Factor the CategoryVal column\ndf_fruit1$CategoryVal &lt;- factor(df_fruit1$CategoryVal, levels = level_order)\n\n\ncolor_palette &lt;- c(\n  \"#FF0000\", \"#FF2020\", \"#FF4D4D\", \"#FF7B7B\", \"#FFA8A8\", \"#FFD6D6\"\n)\n\nplot1 &lt;- ggplot(df_fruit1, aes(x = CategoryVal, y = Value, fill = CategoryVal)) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"Income\", y = \"Percentage\",fill = \"Income Category\") +\n  scale_fill_manual(values = color_palette) +\n  ggtitle(paste(Question1,\"by Income\")) + \n  theme(plot.title = element_text(size = 10)) +\n  scale_x_discrete(limits = rev(levels(df_fruit1$CategoryVal))) +\n  coord_flip()\nreturn(plot1)\n}\n\n#IncomeQuestion(df,'Percent of adults who report consuming fruit less than one time daily')\n\n\n\n\nCode\n## Education\n\nEducationQuestion &lt;- function(df, Question1) {\n\ndf_fruit1 &lt;- df %&gt;%\n    filter(Question == Question1) %&gt;% filter(Category == 'Education') %&gt;% filter (YearStart == \"2021\") %&gt;% group_by(CategoryVal) %&gt;%\n    summarize(Sum_Column1 = sum(Sample,na.rm = TRUE), Sum_Column2 = sum(SampleSize,na.rm = TRUE))\n\ndf_fruit1$Value &lt;- df_fruit1$Sum_Column1 / df_fruit1$Sum_Column2\n\nlevel_order &lt;- c(\n  \"Less than high school\",\n  \"High school graduate\",\n  \"Some college or technical school\",\n  \"College graduate\"\n)\n\n# Factor the CategoryVal column\ndf_fruit1$CategoryVal &lt;- factor(df_fruit1$CategoryVal, levels = level_order)\n\n\ncolor_palette &lt;- c(\n  \"#FF0000\", \"#FF4D4D\", \"#FF7B7B\", \"#FFD6D6\"\n)\n\nplot1 &lt;- ggplot(df_fruit1, aes(x = CategoryVal, y = Value, fill = CategoryVal)) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"Education\", y = \"Percentage\",fill=\"Education Category\") +\n  scale_fill_manual(values = color_palette) +\n  ggtitle(paste(Question1,\"by Education\")) + \n  theme(plot.title = element_text(size = 8)) +\n  scale_x_discrete(limits = rev(levels(df_fruit1$CategoryVal))) +\n  coord_flip()\n\nreturn(plot1)\n}\n\n#EducationQuestion(df,'Percent of adults who report consuming fruit less than one time daily')\n\n\n\n\nCode\n## Age\n\nAgeQuestion &lt;- function(df, Question1) {\n\ndf_fruit1 &lt;- df %&gt;%\n    filter(Question == Question1) %&gt;% filter(Category == 'Age (years)') %&gt;% filter (YearStart == \"2021\") %&gt;% group_by(CategoryVal) %&gt;%\n    summarize(Sum_Column1 = sum(Sample,na.rm = TRUE), Sum_Column2 = sum(SampleSize,na.rm = TRUE))\n\ndf_fruit1$Value &lt;- df_fruit1$Sum_Column1 / df_fruit1$Sum_Column2\n\nlevel_order &lt;- c(\n  \"18 - 24\",\n  \"25 - 34\",\n  \"35 - 44\",\n  \"45 - 54\",\n  \"55 - 64\",\n  \"65 or older\"\n)\n\n# Factor the CategoryVal column\ndf_fruit1$CategoryVal &lt;- factor(df_fruit1$CategoryVal, levels = level_order)\n\n\ncolor_palette &lt;- c(\n  \"#FF0000\", \"#FF2020\", \"#FF4D4D\", \"#FF7B7B\", \"#FFA8A8\", \"#FFD6D6\"\n)\n\nplot1 &lt;- ggplot(df_fruit1, aes(x = CategoryVal, y = Value, fill = CategoryVal)) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"Age\", y = \"Percentage\", fill=\"Age Category\") +\n  scale_fill_manual(values = color_palette) +\n  ggtitle(paste(Question1,\"by Age\")) + \n  theme(plot.title = element_text(size = 10)) +\n  scale_x_discrete(limits = rev(levels(df_fruit1$CategoryVal))) +\n  coord_flip()\nreturn(plot1)\n}\n\n#AgeQuestion(df,'Percent of adults who report consuming fruit less than one time daily')\n\n\n\n\nCode\n#Race\n\nRaceQuestion &lt;- function(df, Question1) {\n\ndf_fruit1 &lt;- df %&gt;%\n    filter(Question == Question1) %&gt;% filter(Category == 'Race/Ethnicity') %&gt;% filter (YearStart == \"2021\") %&gt;% group_by(CategoryVal) %&gt;%\n    summarize(Sum_Column1 = sum(Sample,na.rm = TRUE), Sum_Column2 = sum(SampleSize,na.rm = TRUE))\n\ndf_fruit1$Value &lt;- df_fruit1$Sum_Column1 / df_fruit1$Sum_Column2\n\ndf_fruit1 &lt;- df_fruit1 %&gt;% filter(CategoryVal!='Hawaiian/Pacific Islander') %&gt;% filter(CategoryVal!='Other') %&gt;% filter(CategoryVal!='American Indian/Alaska Native')\n\nplot1 &lt;- ggplot(df_fruit1, aes(x = reorder(CategoryVal, Value), y = Value, fill = reorder(CategoryVal, -Value))) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"Race\", y = \"Percentage\",fill = \"Race\") +\n  ggtitle(paste(Question1,\"by Race\")) + \n  theme(plot.title = element_text(size = 10)) +\n  coord_flip()\n\nreturn(plot1)\n}\n\n#RaceQuestion(df, 'Percent of adults who report consuming fruit less than one time daily')\n\n\n\n\nCode\nQuestionCategory &lt;- function(df,Question1,Category1) {\n  if (Category1 == \"Income\") {\n    # Function for case 1\n    IncomeQuestion(df,Question1)\n  } else if (Category1 == \"Education\") {\n    # Function for case 2\n    EducationQuestion(df,Question1)\n  } else if (Category1 == \"Age\") {\n    # Function for case 3\n    AgeQuestion(df,Question1)\n  } else if (Category1 == \"Race\") {\n    # Function for case 4\n    RaceQuestion(df,Question1)\n  } else {\n    # Default action if case is not recognized\n    print(\"Invalid case\")\n  }\n}\n\nQuestionCategory(df,'Percent of adults aged 18 years and older who have obesity','Race')\n\n\n\n\n\nCode\nQuestionCategory(df,'Percent of adults aged 18 years and older who have obesity','Income')\n\n\n\n\n\nCode\nQuestionCategory(df,'Percent of adults aged 18 years and older who have obesity','Education')\n\n\n\n\n\nCode\nQuestionCategory(df,'Percent of adults aged 18 years and older who have obesity','Age')\n\n\n\n\n\nSummary Interpretation (Percent of adults aged 18 years and older who have obesity):\n\nIncome: The bar graph shows that the people earning the most have the lowest percentage of obesity. On the other hand, the people who make the least amount of money have the highest percentage of obesity.\nEducation: The bar graph shows that the most educated people have a minimum percentage of obesity rate. However, people with the lowest education qualification have a maximum percentage of obesity rate.\nAge: The age group 18 to 24 has the lowest obesity percentage. Then there is an increasing trend from the 18 to 24 age group to the age group of 45- 54. Then, after this age range, the percentage of obesity starts decreasing.\nRace: Non-Hispanic black individuals tend to have the highest obesity rates, while Asian individuals have the lowest.\n\n\n\nCode\nQuestionCategory &lt;- function(df,Question1,Category1) {\n  if (Category1 == \"Income\") {\n    # Function for case 1\n    IncomeQuestion(df,Question1)\n  } else if (Category1 == \"Education\") {\n    # Function for case 2\n    EducationQuestion(df,Question1)\n  } else if (Category1 == \"Age\") {\n    # Function for case 3\n    AgeQuestion(df,Question1)\n  } else if (Category1 == \"Race\") {\n    # Function for case 4\n    RaceQuestion(df,Question1)\n  } else {\n    # Default action if case is not recognized\n    print(\"Invalid case\")\n  }\n}\n\nQuestionCategory(df,'Percent of adults who report consuming fruit less than one time daily','Race')\n\n\n\n\n\nCode\nQuestionCategory(df,'Percent of adults who report consuming fruit less than one time daily','Income')\n\n\n\n\n\nCode\nQuestionCategory(df,'Percent of adults who report consuming fruit less than one time daily','Education')\n\n\n\n\n\nCode\nQuestionCategory(df,'Percent of adults who report consuming fruit less than one time daily','Age')\n\n\n\n\n\nSummary Interpretation (Percent of adults who report consuming fruit less than one time daily): Income: The most minor percentage of adults consuming fruit less than one time daily are the people who earn the most. On the other hand, the highest percentage of people consuming fruit less than one time daily are the ones who make less than $15,000.\n\nEducation: The bar graph shows that the most educated people, having the lowest percentage, reported consuming fruit less than once daily. However, people who were high school graduates had the highest percentage who reported consuming fruit less than once daily.\nAge: The oldest group, having the lowest percentage, reported consuming fruit less than once daily. Meanwhile, people between 18 and 24 have the highest percentage of reported consuming fruit less than one time daily.\nRace: People of 2 or more races have the highest percentage of reported consuming fruit less than once daily, while Hispanic individuals have the lowest.\n\n\n\nCode\nQuestionCategory &lt;- function(df,Question1,Category1) {\n  if (Category1 == \"Income\") {\n    # Function for case 1\n    IncomeQuestion(df,Question1)\n  } else if (Category1 == \"Education\") {\n    # Function for case 2\n    EducationQuestion(df,Question1)\n  } else if (Category1 == \"Age\") {\n    # Function for case 3\n    AgeQuestion(df,Question1)\n  } else if (Category1 == \"Race\") {\n    # Function for case 4\n    RaceQuestion(df,Question1)\n  } else {\n    # Default action if case is not recognized\n    print(\"Invalid case\")\n  }\n}\n\nQuestionCategory(df,'Percent of adults who engage in no leisure-time physical activity','Race')\n\n\n\n\n\nCode\nQuestionCategory(df,'Percent of adults who engage in no leisure-time physical activity','Income')\n\n\n\n\n\nCode\nQuestionCategory(df,'Percent of adults who engage in no leisure-time physical activity','Education')\n\n\n\n\n\nCode\nQuestionCategory(df,'Percent of adults who engage in no leisure-time physical activity','Age')\n\n\n\n\n\nQuestion : Percent of adults who engage in no leisure-time physical activity\nIncome: From the bar plot, an increasing percentage is visible from the most earned group of people to the least-earned group of people.\n\nEducation: Likewise, in the âIncome Category,â an increasing percentage is visible from the most educated people to the least educated people\nAge: a decreasing percentage is visible from the oldest people to the youngest people who engage in no leisure-time physical activity\nRace: Hispanics have the highest percentage of reported consuming fruit less than once daily, while Asian individuals have the lowest.\n\nConclusion:\nQ3,4. Socioeconomic factors, educational attainment, age, and race collectively influence health-related behaviors. For example, people earning the most tend to exhibit similar behavior. On the other hand, people with minimal income demonstrate identical behaviors. Then, the youngest group of people either carries a particular classâs maximum or minimum percentages.\n\n\nCode\nScatterplotQIncome &lt;- function(df,Question1,Question2) {\n\ndf_Question1 &lt;- df %&gt;%\n    filter(Question == Question1) %&gt;% filter(Category == 'Income') %&gt;% filter (YearStart == \"2021\") %&gt;% group_by(CategoryVal) %&gt;%\n    summarize(Sum_Column1 = sum(Sample,na.rm = TRUE), Sum_Column2 = sum(SampleSize,na.rm = TRUE))\n\ndf_Question1$Value &lt;- df_Question1$Sum_Column1 / df_Question1$Sum_Column2\n\n\ndf_Question2 &lt;- df %&gt;%\n    filter(Question == Question2) %&gt;% filter(Category == 'Income') %&gt;% filter (YearStart == \"2021\") %&gt;% group_by(CategoryVal) %&gt;%\n    summarize(Sum_Column1 = sum(Sample,na.rm = TRUE), Sum_Column2 = sum(SampleSize,na.rm = TRUE))\n\ndf_Question2$Value &lt;- df_Question2$Sum_Column1 / df_Question2$Sum_Column2\n\ndf_Question1 &lt;- df_Question1 %&gt;% filter(CategoryVal!='Data not reported')\ndf_Question2 &lt;- df_Question2 %&gt;% filter(CategoryVal!='Data not reported')\n\ndf_merged &lt;- merge(df_Question1, df_Question2, by = \"CategoryVal\", all = TRUE)\n\ncolnames(df_merged)[4] &lt;-  \"Question1\"\ncolnames(df_merged)[7] &lt;-  \"Question2\"\n\nscatter_plot &lt;- plot_ly(df_merged, x = ~Question1, y = ~Question2, text= ~CategoryVal,\n        hoverinfo = 'text') \n\n# Customize the layout\nscatter_plot &lt;- scatter_plot %&gt;% \n  layout(\n    xaxis = list(\n      title = paste(Question1,'by Income'),\n      titlefont = list(\n        size = 10  # Change the size of the x-axis label\n      )\n    ),\n    yaxis = list(\n      title = paste(Question2,'by Income'),\n      titlefont = list(\n        size = 10  # Change the size of the x-axis label\n      )\n    ),\n    title = \"Scatterplot of the comparison of two questions by Income\"\n  )\n\nreturn(scatter_plot)\n}\n\n#ScatterplotQIncome(df,Question1,Question2)\n\n\n\n\nCode\n#Question1 = 'Percent of adults who report consuming fruit less than one time daily'\n\n#Question2 = 'Percent of adults aged 18 years and older who have obesity'\n\nScatterplotQEducation &lt;- function(df,Question1,Question2) {\n\ndf_Question1 &lt;- df %&gt;%\n    filter(Question == Question1) %&gt;% filter(Category == 'Education') %&gt;% filter (YearStart == \"2021\") %&gt;% group_by(CategoryVal) %&gt;%\n    summarize(Sum_Column1 = sum(Sample,na.rm = TRUE), Sum_Column2 = sum(SampleSize,na.rm = TRUE))\n\ndf_Question1 &lt;- df_Question1 %&gt;% filter(CategoryVal!='Data not reported')\n\ndf_Question1$Value &lt;- df_Question1$Sum_Column1 / df_Question1$Sum_Column2\n\n\ndf_Question2 &lt;- df %&gt;%\n    filter(Question == Question2) %&gt;% filter(Category == 'Education') %&gt;% filter (YearStart == \"2021\") %&gt;% group_by(CategoryVal) %&gt;%\n    summarize(Sum_Column1 = sum(Sample,na.rm = TRUE), Sum_Column2 = sum(SampleSize,na.rm = TRUE))\n\ndf_Question2$Value &lt;- df_Question2$Sum_Column1 / df_Question2$Sum_Column2\n\ndf_merged &lt;- merge(df_Question1, df_Question2, by = \"CategoryVal\", all = TRUE)\n\ncolnames(df_merged)[4] &lt;-  \"Question1\"\ncolnames(df_merged)[7] &lt;-  \"Question2\"\n\nscatter_plot &lt;- plot_ly(df_merged, x = ~Question1, y = ~Question2, text= ~CategoryVal,\n        hoverinfo = 'text') \n\n# Customize the layout\nscatter_plot &lt;- scatter_plot %&gt;% \n  layout(\n    xaxis = list(\n      title = paste(Question1,'by Income'),\n      titlefont = list(\n        size = 10  # Change the size of the x-axis label\n      )\n    ),\n    yaxis = list(\n      title = paste(Question2,'by Income'),\n      titlefont = list(\n        size = 10  # Change the size of the x-axis label\n      )\n    ),\n    title = \"Scatterplot of the comparison of two questions by Education\"\n  )\n\nreturn(scatter_plot)\n}\n\n#ScatterplotQEducation(df,Question1,Question2)\n\n\n\n\nCode\n#Question1 = 'Percent of adults who report consuming fruit less than one time daily'\n\n#Question2 = 'Percent of adults aged 18 years and older who have obesity'\n\nScatterplotQAge &lt;- function(df,Question1,Question2) {\n\ndf_Question1 &lt;- df %&gt;%\n    filter(Question == Question1) %&gt;% filter(Category == 'Age (years)') %&gt;% filter (YearStart == \"2021\") %&gt;% group_by(CategoryVal) %&gt;%\n    summarize(Sum_Column1 = sum(Sample,na.rm = TRUE), Sum_Column2 = sum(SampleSize,na.rm = TRUE))\n\ndf_Question1$Value &lt;- df_Question1$Sum_Column1 / df_Question1$Sum_Column2\n\n\ndf_Question2 &lt;- df %&gt;%\n    filter(Question == Question2) %&gt;% filter(Category == 'Age (years)') %&gt;% filter (YearStart == \"2021\") %&gt;% group_by(CategoryVal) %&gt;%\n    summarize(Sum_Column1 = sum(Sample,na.rm = TRUE), Sum_Column2 = sum(SampleSize,na.rm = TRUE))\n\ndf_Question2$Value &lt;- df_Question2$Sum_Column1 / df_Question2$Sum_Column2\n\ndf_merged &lt;- merge(df_Question1, df_Question2, by = \"CategoryVal\", all = TRUE)\n\ncolnames(df_merged)[4] &lt;-  \"Question1\"\ncolnames(df_merged)[7] &lt;-  \"Question2\"\n\nscatter_plot &lt;- plot_ly(df_merged, x = ~Question1, y = ~Question2, text= ~CategoryVal,\n        hoverinfo = 'text') \n\n# Customize the layout\nscatter_plot &lt;- scatter_plot %&gt;% \n  layout(\n    xaxis = list(\n      title = paste(Question1,'by Age'),\n      titlefont = list(\n        size = 10  # Change the size of the x-axis label\n      )\n    ),\n    yaxis = list(\n      title = paste(Question2,'by Age'),\n      titlefont = list(\n        size = 10  # Change the size of the x-axis label\n      )\n    ),\n    title = \"Scatterplot of the comparison of two questions by Age\"\n  )\n\nreturn(scatter_plot)\n}\n\n#ScatterplotQAge(df,Question1,Question2)\n\n\n\n\nCode\n#Question1 = 'Percent of adults who report consuming vegetables less than one time daily'\n\n#Question2 = 'Percent of adults aged 18 years and older who have obesity'\n\nScatterplotQRace &lt;- function(df,Question1,Question2) {\n\ndf_Question1 &lt;- df %&gt;%\n    filter(Question == Question1) %&gt;% filter(Category == 'Race/Ethnicity') %&gt;% filter (YearStart == \"2021\") %&gt;% group_by(CategoryVal) %&gt;%\n    summarize(Sum_Column1 = sum(Sample,na.rm = TRUE), Sum_Column2 = sum(SampleSize,na.rm = TRUE))\n\ndf_Question1 &lt;- df_Question1 %&gt;% filter(CategoryVal!='Hawaiian/Pacific Islander') %&gt;% filter(CategoryVal!='Other') %&gt;% filter(CategoryVal!='American Indian/Alaska Native')\n\ndf_Question1$Value &lt;- df_Question1$Sum_Column1 / df_Question1$Sum_Column2\n\n\ndf_Question2 &lt;- df %&gt;%\n    filter(Question == Question2) %&gt;% filter(Category == 'Race/Ethnicity') %&gt;% filter (YearStart == \"2021\") %&gt;% group_by(CategoryVal) %&gt;%\n    summarize(Sum_Column1 = sum(Sample,na.rm = TRUE), Sum_Column2 = sum(SampleSize,na.rm = TRUE))\n\ndf_Question2 &lt;- df_Question2 %&gt;% filter(CategoryVal!='Hawaiian/Pacific Islander') %&gt;% filter(CategoryVal!='Other') %&gt;% filter(CategoryVal!='American Indian/Alaska Native')\n\ndf_Question2$Value &lt;- df_Question2$Sum_Column1 / df_Question2$Sum_Column2\n\ndf_merged &lt;- merge(df_Question1, df_Question2, by = \"CategoryVal\", all = TRUE)\n\ncolnames(df_merged)[4] &lt;-  \"Question1\"\ncolnames(df_merged)[7] &lt;-  \"Question2\"\n\nscatter_plot &lt;- plot_ly(df_merged, x = ~Question1, y = ~Question2, text= ~CategoryVal,\n        hoverinfo = 'text') \n\n# Customize the layout\nscatter_plot &lt;- scatter_plot %&gt;% \n  layout(\n    xaxis = list(\n      title = paste(Question1,'by Race'),\n      titlefont = list(\n        size = 10  # Change the size of the x-axis label\n      )\n    ),\n    yaxis = list(\n      title = paste(Question2,'by Race'),\n      titlefont = list(\n        size = 10  # Change the size of the x-axis label\n      )\n    ),\n    title = \"Scatterplot of the comparison of two questions by Race\"\n  )\n\nreturn(scatter_plot)\n}\n\n#ScatterplotQRace(df,Question1,Question2)\n\n\n\n\nCode\nQuestionCategoryScatterplot &lt;- function(df,Question1,Question2,Category1) {\n  if (Category1 == \"Income\") {\n    # Function for case 1\n    ScatterplotQIncome(df,Question1,Question2)\n  } else if (Category1 == \"Education\") {\n    # Function for case 2\n    ScatterplotQEducation(df,Question1,Question2)\n  } else if (Category1 == \"Age\") {\n    # Function for case 3\n    ScatterplotQAge(df,Question1,Question2)\n  } else if (Category1 == \"Race\") {\n    # Function for case 4\n    ScatterplotQRace(df,Question1,Question2)\n  } else {\n    # Default action if case is not recognized\n    print(\"Invalid case\")\n  }\n}\n\nQuestion1 = 'Percent of adults who report consuming fruit less than one time daily'\n\nQuestion2 = 'Percent of adults aged 18 years and older who have obesity'\n\nQuestionCategoryScatterplot(df,Question1,Question2,'Race')\n\n\n\n\n\n\nCode\nQuestionCategoryScatterplot(df,Question1,Question2,'Education')\n\n\n\n\n\n\nCode\nQuestionCategoryScatterplot(df,Question1,Question2,'Age')\n\n\n\n\n\n\nCode\nQuestionCategoryScatterplot(df,Question1,Question2,'Income')\n\n\n\n\n\n\nQ1. What dietary patterns are prevalent among adults, and how do these patterns correlate with obesity rates?\nTo analyze this research interest, we have taken the question, âPercentage of adults aged 18 years and older who have obesityâ; with this, we will combine different food habits (Fruit and vegetables) by age and location. Case 1: +ve Question1 = âPercent of adults who report consuming fruit less than one time dailyâ Question2 = âPercent of adults aged 18 years and older who have obesityâ QuestionCategoryScatterplot(df,Question1,Question2,âAgeâ)\nScatterplot comparison by the above 2 questions by age: shows There is a weak positive relationship visible by the scatterplot when we are using âPercent of adults who report consuming fruit less than once daily by ageâ and âPercent of adults aged 18 years and older who have obesity by ageâ. This implies that when there is an increase in the percentage of adults who report consuming fruit less than one time daily by age, then there will also be an increase.\n\n\nCode\nQuestionCategoryScatterplot &lt;- function(df,Question1,Question2,Category1) {\n  if (Category1 == \"Income\") {\n    # Function for case 1\n    ScatterplotQIncome(df,Question1,Question2)\n  } else if (Category1 == \"Education\") {\n    # Function for case 2\n    ScatterplotQEducation(df,Question1,Question2)\n  } else if (Category1 == \"Age\") {\n    # Function for case 3\n    ScatterplotQAge(df,Question1,Question2)\n  } else if (Category1 == \"Race\") {\n    # Function for case 4\n    ScatterplotQRace(df,Question1,Question2)\n  } else {\n    # Default action if case is not recognized\n    print(\"Invalid case\")\n  }\n}\n\nQuestion1 = 'Percent of adults who report consuming vegetables less than one time daily'\n\nQuestion2 = 'Percent of adults aged 18 years and older who have obesity'\n\nQuestionCategoryScatterplot(df,Question1,Question2,'Race')\n\n\n\n\n\n\n\nCode\nQuestionCategoryScatterplot(df,Question1,Question2,'Education')\n\n\n\n\n\n\n\nCode\nQuestionCategoryScatterplot(df,Question1,Question2,'Age')\n\n\n\n\n\n\n\nCode\nQuestionCategoryScatterplot(df,Question1,Question2,'Income')\n\n\n\n\n\n\n\nCase 02: - ve Question1 = âPercent of adults who report consuming vegetables less than one time dailyâ Question2 = âPercent of adults aged 18 years and older who have obesityâ QuestionCategoryScatterplot(df,Question1,Question2,âAgeâ)\nThe scatterplot shows a weak negative relationship when we are using ââPercent of adults who report consuming vegetables less than once dailyââ and âPercent of adults aged 18 years and older who have obesity by ageâ. This implies that when there is an increase in the percentage of adults who report consuming fruit less than one time daily by age, then there will also be a decrease. Conclusion: Neither positive nor negative co-relation is strong. The age group 18 to 24 is the outlier for both cases.\n\n\nCode\ndf_fruits &lt;- df %&gt;%\n  filter(Question == \"Percent of adults who report consuming fruit less than one time daily\") %&gt;%\n  filter(Category == \"Total\") %&gt;%\n  filter(YearStart == '2021')\n\n# Create a new data frame with two columns\ndf_fruits &lt;- data.frame(region = df_fruits$Location, value = df_fruits$Value)\n\n# Print the structure of the new data frame\nstr(df_fruits)\n\n\n'data.frame':   55 obs. of  2 variables:\n $ region: chr  \"vermont\" \"louisiana\" \"district of columbia\" \"illinois\" ...\n $ value : num  34.4 48.6 33.2 39.2 42.1 46.4 43.3 43 48.7 36.2 ...\n\n\nCode\ndf_vegetables &lt;- df %&gt;%\n  filter(Question == \"Percent of adults who report consuming vegetables less than one time daily\") %&gt;%\n  filter(Category == \"Total\") %&gt;%\n  filter(YearStart == '2021')\n\n# Create a new data frame with two columns\ndf_vegetables &lt;- data.frame(region = df_vegetables$Location, value = df_vegetables$Value)\n\n# Print the structure of the new data frame\nstr(df_vegetables)\n\n\n'data.frame':   55 obs. of  2 variables:\n $ region: chr  \"south dakota\" \"virgin islands\" \"national\" \"nevada\" ...\n $ value : num  19.2 32.2 20.6 24.2 21.3 23.2 25.7 15.6 19.2 18.7 ...\n\n\nCode\ndf_obesity &lt;- df %&gt;%\n  filter(Question == \"Percent of adults aged 18 years and older who have obesity\") %&gt;%\n  filter(Category == \"Total\") %&gt;%\n  filter(YearStart == '2021')\n\n\nobesity_df &lt;- data.frame(region = df_obesity$Location, value = df_obesity$Value)\n\ndf_merged &lt;- merge(obesity_df, df_fruits, by = \"region\", all = TRUE)\n\ndf_merged &lt;- merge(df_merged, df_vegetables, by = \"region\", all = TRUE)\n\n\ncolnames(df_merged)[2] &lt;-  \"Obesity\"\ncolnames(df_merged)[3] &lt;-  \"Fruits\"\ncolnames(df_merged)[4] &lt;-  \"Vegetables\"\n\n\n\n\nCode\nscatter_plot &lt;- plot_ly(df_merged, x = ~Fruits, y = ~Obesity, text= ~region,\n        hoverinfo = 'text') \n\nscatter_plot &lt;- scatter_plot %&gt;% \n  layout(\n    xaxis = list(\n      title = paste('Percent of adults who report consuming fruit less than one time daily'),\n      titlefont = list(\n        size = 10  # Change the size of the x-axis label\n      )\n    ),\n    yaxis = list(\n      title = paste('Percent of adults aged 18 years and older who have obesity'),\n      titlefont = list(\n        size = 10  # Change the size of the x-axis label\n      )\n    ),\n    title = \"Scatterplot of the comparison of two questions by Location\"\n  )\n\nscatter_plot\n\n\n\n\n\n\nThere is a clear positive relation between Percent of adults aged 18 years and older who have obesity and the percentage of adults who report consuming fruit less than one time daily by region.\n\n\nCode\nscatter_plot &lt;- plot_ly(df_merged, x = ~Vegetables, y = ~Obesity, text= ~region,\n        hoverinfo = 'text') \n\nscatter_plot &lt;- scatter_plot %&gt;% \n  layout(\n    xaxis = list(\n      title = paste('Percent of adults who report consuming vegetables less than one time daily'),\n      titlefont = list(\n        size = 10  # Change the size of the x-axis label\n      )\n    ),\n    yaxis = list(\n      title = paste('Percent of adults aged 18 years and older who have obesity'),\n      titlefont = list(\n        size = 10  # Change the size of the x-axis label\n      )\n    ),\n    title = \"Scatterplot of the comparison of two questions by Location\"\n  )\n\nscatter_plot\n\n\n\n\n\n\n\nOn the other hand, no relationship is visible between the percentage of adults aged 18 years and older who are obese and the percentage of adults who report consuming vegetables less than once daily.\n\n\nCode\nstate_choropleth(df_fruits,\n                 title = \"Percent of adults who report consuming fruit less than one time daily\",\n                 legend = \"Percentage\")\n\n\n\n\n\nPercent of adults who report consuming fruit less than one time daily [45.9 to 48.7] are mostly from OK (Oklahoma), AR (Arkansas), LA (Louisiana), MS (Mississippi), AL (Alabama), TN(Tennessee), WV(West Virginia).\nPercent of adults who report consuming fruit less than one time daily is the least (33.2 to 36.2] from the below states: OR (Oregon), IL (Illinois), VT (Vermont), MT (Montana), MA (Massachusetts), ID (Idaho), DC (District of Columbia), ME (Maine).\nThe black-marked zone is for the people from certain areas who didnât respond to this question.\n\n\nCode\nstate_choropleth(df_vegetables,\n                 title = \"Percent of adults who report consuming vegetables less than one time daily\",\n                 legend = \"Percentage\")\n\n\n\n\n\nPercent of adults who report consuming vegetables less than once time daily [45.9 to 48.7] are mostly from ND (North Dakota), IA (Lowa), NV(Nevada), CA (California), TX (Texas), LA (Louisiana), MS (Mississippi)\nPercent of adults who report consuming vegetables less than one time daily is the least (33.2 to 36.2] from the below states: ME (Maine) The black-marked zone is for the people from certain areas who didnât respond to this question.\nConclusion: There is a geographical contrast among different states regarding having more/ less vegetables/fruits.\n\n\nCode\nQuestionCategoryTimeSeries &lt;- function(df,Question1,Category1) {\n\ndf_Question1 &lt;- df %&gt;%\n    filter(Question == Question1) %&gt;% filter(Category == Category1) %&gt;% group_by(YearStart,CategoryVal) %&gt;%\n    summarize(Sum_Column1 = sum(Sample,na.rm = TRUE), Sum_Column2 = sum(SampleSize,na.rm = TRUE))\n\ndf_Question1 &lt;- df_Question1 %&gt;% filter(CategoryVal!='Hawaiian/Pacific Islander') %&gt;% filter(CategoryVal!='Other') %&gt;% filter(CategoryVal!='American Indian/Alaska Native')\n\ndf_Question1 &lt;- df_Question1 %&gt;% filter(CategoryVal!='Data not reported')\n\ndf_Question1$Value &lt;- df_Question1$Sum_Column1 / df_Question1$Sum_Column2\n\n# Create the initial plot\nplot &lt;- plot_ly()\n\n# Iterate over each category\ncategories &lt;- unique(df_Question1$CategoryVal)\n\ncategories &lt;- categories[order(sapply(categories, function(cat) sum(df_Question1$Value[df_Question1$CategoryVal == cat])))]\n\ncategories &lt;- rev(categories)\n\n\nfor (category in categories) {\n  # Subset the data for the current category\n  subset_df &lt;- df_Question1[df_Question1$CategoryVal == category, ]\n  \n  # Add a trace for the current category\n  plot &lt;- plot %&gt;% \n    add_trace(\n      x = subset_df$YearStart,\n      y = subset_df$Value,\n      type = \"scatter\",\n      mode = \"lines+markers\",\n      name = category\n    )\n}\n\n# Customize the layout\nplot &lt;- plot %&gt;% \n  layout(\n    xaxis = list(title = \"Year\"),\n    yaxis = list(title = \"Percentages\"),\n    title = paste(Question1,'across Years for',Category1)\n  )\n\n# Display the plot\nreturn(plot)\n\n}\n\nQuestionCategoryTimeSeries(df,'Percent of adults aged 18 years and older who have obesity','Income')\n\n\n\n\n\n\nBy income: Moreover, there has been a significant growth in the percentage of obesity from 2011 to 2021. The group of people who are earning the least (less than $15,000) carry the maximum percentage of obesity, and the group of people who make the most ($75,000 or greater) hold the minimum percentage of obesity. (We got the same information from Barplot as well.)\nBy Education: Like the Income Category, a clear increasing trend is visible over the years among different levels of educated people. The least educated group (those less than high school) has the highest percentage of obesity over the year. On the other hand, the most educated group (college graduates) has the lowest percentage of obesity over the year. (Exactly same information we got from barplot as well)\nBy Age (year): A clear increasing trend is visible over the year among all groups of people by Age. People whose Age is between the mid-40s and mid-50s show the highest percentage of obesity. On the other hand, the youngest group of people (18 to 24) shows the lowest percentage of obesity. (We got the same information from Barplot as well.)\nRace/Ethnicity: Likewise, in all the categories like Income, Education, and Age, an increasing trend is visible over the years by Race. Among the different kinds of Race, Non-Hispanic Black exhibit the highest percentage of obesity, whereas Asian carries the lowest percentage of obesity. (We got the same information from Barplot as well.)\nConclusion: Overall, there has been an increase in the obesity rate over the years. If we consider the education and income factors, then least earned and least-educated people exhibit the highest percentage of obesity. On the other hand, most and most educated people show the least amount of obesity. Now. Among the youngest adults, the obesity rate is very high. So, we can establish that young people are neither the richest nor the most educated (supporting evidence from our early analysis).\n[So this analysis supports the bar plot analysis]\n\n\nCode\n#parcoords(df_merged,rownames = FALSE,\n            #brushMode = \"1D-axes\",\n            #color = list(colorBy = \"region\",\n                         #colorScale = \"scaleOrdinal\",\n                         #colorScheme = \"schemeCategory10\"),\n            #alpha = 0.5,\n            #withD3 = TRUE,\n            #width = 770,\n            #height = 600)\n\n\n\n\nCode\n# df_fruit_race &lt;- df %&gt;%\n#         filter(Question == \"Percent of adults who report consuming fruit less than one time daily\") %&gt;%   filter(Category == 'Race/Ethnicity') %&gt;% filter (YearStart == \"2021\") %&gt;%\n#    pivot_wider(id_cols = Location, names_from = CategoryVal, values_from = Value)\n\n#df_fruit_race &lt;- df_fruit_race %&gt;% select(where(~ sum(is.na(.)) &lt;= 20))\n\n\n\n\nCode\n#df_melted &lt;- tidyr::pivot_longer(df_fruit_race, cols = -Location, names_to = \"Category\", values_to = \"Value\")\n\n# Create the box plot\n# ggplot(df_melted, aes(x = Location, y = Value, color = Category)) +\n#   geom_point() +\n#   labs(x = \"Location\", y = \"Value\", title = \"Cleveland Dot Plot\") +\n#   theme_minimal() +\n#   coord_flip()\n\n\n\n\nCode\n# parcoords(df_fruit_race,rownames = FALSE,\n#             brushMode = \"1D-axes\",\n#             color = list(colorBy = \"Location\",\n#                          colorScale = \"scaleOrdinal\",\n#                          colorScheme = \"schemeCategory10\"),\n#             alpha = 0.5,\n#             withD3 = TRUE,\n#             width = 770,\n#            height = 600)\n\n\n\n\nCode\n#grid.arrange(plot1, plot2, plot3,plot4, nrow = 2)\n\n\n\n\nCode\ndf_obesity &lt;- df %&gt;%\n    filter(Question == 'Percent of adults aged 18 years and older who have obesity') %&gt;% filter(Category == 'Total') %&gt;% group_by(YearStart) %&gt;% summarize(Sum_Column1 = sum(Sample,na.rm = TRUE), Sum_Column2 = sum(SampleSize,na.rm = TRUE))\n\ndf_obesity$Value &lt;- df_obesity$Sum_Column1 / df_obesity$Sum_Column2\n\ndf_obesity &lt;- data.frame(Year = df_obesity$YearStart , Value = df_obesity$Value)\n\ndf_fruits &lt;- df %&gt;%\n    filter(Question == 'Percent of adults who report consuming fruit less than one time daily') %&gt;% filter(Category == 'Total') %&gt;% group_by(YearStart) %&gt;% summarize(Sum_Column1 = sum(Sample,na.rm = TRUE), Sum_Column2 = sum(SampleSize,na.rm = TRUE))\n\ndf_fruits$Value &lt;- df_fruits$Sum_Column1 / df_fruits$Sum_Column2\n\ndf_fruits &lt;- data.frame(Year = df_fruits$YearStart , Value1 = df_fruits$Value)\n\ndf_physical &lt;- df %&gt;%\n    filter(Question == 'Percent of adults who engage in no leisure-time physical activity') %&gt;% filter(Category == 'Total') %&gt;% group_by(YearStart) %&gt;% summarize(Sum_Column1 = sum(Sample,na.rm = TRUE), Sum_Column2 = sum(SampleSize,na.rm = TRUE))\n\ndf_physical$Value &lt;- df_physical$Sum_Column1 / df_physical$Sum_Column2\n\ndf_physical &lt;- data.frame(Year = df_physical$YearStart , Value2 = df_physical$Value)\n\ndf_merged &lt;- merge(df_obesity, df_fruits, by = \"Year\", all = TRUE)\ndf_merged &lt;- merge(df_merged, df_physical, by = \"Year\", all = TRUE)\n\nwrite.csv(df_merged, \"newdf.csv\", row.names=FALSE)"
  },
  {
    "objectID": "d3graph.html",
    "href": "d3graph.html",
    "title": "4Â  Interactive graph",
    "section": "",
    "text": "Year on Year trend of Total Obesity in the US\n\n\nAdd Year\n\n\nRemove Year"
  },
  {
    "objectID": "appendix.html#description-of-the-variables",
    "href": "appendix.html#description-of-the-variables",
    "title": "6Â  Appendix",
    "section": "6.1 Description of the variables",
    "text": "6.1 Description of the variables\nIn this section, we are providing a description of all the columns of the original dataset before the data-cleaning part was done.\nYearStart and YearEnd: YearStart represents the start, and YearEnd represents the end of the period for collecting information on adult diet, physical activity, and weight status.\nLocationAbbr: Identifies the Abbreviations of specific geographic locations.\nLocationDesc: Provides the full names of geographic locations corresponding to the abbreviations in the \"LocationAbbr\" column.\nDatasource: Specifies that the data originates from the Behavioral Risk Factor Surveillance System.\nClass:\n\nDescription: Categorizes the data into classes related to health and lifestyle\nValues: âPhysical Activity,â âObesity / Weight Status,â âFruits and Vegetables.â\nContext: Classifies the data based on health-related categories, providing insights into physical activity, obesity, and nutrition related to fruits and vegetables.\n\nTopic (Same as âClassâ Column): The âTopicâ column duplicates the information found in the âClassâ column.\nQuestion: The âQuestionâ column encompasses a diverse array of health-related inquiries and measurements for adults, providing a comprehensive overview of various aspects such as physical activity, weight status, and dietary habits.\nData_Value_Unit: This column appears to lack information on the unit of measurement, as it consists solely of missing values (NA).\nData_Value_Type: Indicating that the column exclusively contains the actual data values, denoted by the term âValue.â\nData_Value and Data_Value_Alt: Both columns represent the same data, representing diverse data points. The values range from 0.9 to 77.6 and include missing values (NA). These columns signify quantitative measurements as a percentage that answers the questions given to the cohort. Data_Value_Footnote_Symbol and Data_Value_Footnote: These columns appear to lack information, as they consist solely of missing values (NA)\nData_Value_Footnote_Symbol and Data_Value_Footnote: These columns appear to lack information, as they consist solely of missing values (NA)\nLow_Confidence_Limit: The column includes various numeric values, along with NA (indicating missing values) representing the lower limits of confidence intervals.\nHigh_Confidence_Limit: The column includes various numeric values, along with NA (indicating missing values) representing the upper limits of confidence intervals\nSample_Size: The sample size indicates the number of observations for each corresponding data entry.\nTotal: This column represents the overall value without filtration by Race, education, etc.\nAge(years): This column categorizes individuals into age groups, ranging from â18 - 24â to â65 or older.â âNAâ values denote missing or undefined entries, valid for age-specific analysis and comparisons.\nEducation: This column captures the educational attainment of individuals, ranging from âHigh school graduateâ to âCollege graduate,â with âNAâ values indicating missing or undefined entries. It provides insights into the educational background, enabling analysis based on different education levels.\nGender: This column denotes the gender of individuals, with categories including âFemaleâ and âMale.â The âNAâ values indicate missing or undefined gender entries.\nIncome: This column represents the income levels of individuals, ranging from âLess than $15,000â to â$75,000 or greater.â The âNAâ values indicate missing or undefined income entries. Additionally, there is a category for âData not reported.â\nRace/Ethnicity:\n\nDescription: This column categorizes individuals into different racial or ethnic groups, providing insights into the diversity of the dataset. The âNAâ values indicate missing or undefined entries for race/ethnicity.\nValues:\n\nâHispanicâ: Individuals of Hispanic ethnicity.\nâAmerican Indian/Alaska Nativeâ: Individuals belonging to the American Indian or Alaska Native ethnic group.\nâAsianâ: Individuals of Asian ethnicity.\nâNon-Hispanic Whiteâ: Individuals of non-Hispanic White ethnicity.\nâNon-Hispanic Blackâ: Individuals of non-Hispanic Black ethnicity.\nâHawaiian/Pacific Islanderâ: Individuals belonging to the Hawaiian/Pacific Islander ethnic group.\nâ2 or more racesâ: Individuals identifying with two or more racial categories.\nâOtherâ: Individuals belonging to other ethnic or racial categories.\nNA: Missing or undefined race/ethnicity information.\n\n\nGeoLocation: This column provides geographical coordinates in the format (latitude, longitude), enabling spatial analysis and insights into data distribution across different locations. âNAâ values indicate the location of the USA. A total of 106 unique locations are present in the dataset.\nClassID and TopicID: The âClassIDâ and âTopicIDâ columns both represent different categories, with âPAâ corresponding to âPA1,â âOWSâ to âOWS1,â and âFVâ to âFV1.â Each column has three unique identifiers. These columns offer similar information, potentially serving as alternate representations.\nQuestionID: The âQuestionIDâ column serves as a unique identifier for each question in the âQuestionâ column.\nDataValueTypeID: The âDataValueTypeIDâ column contains a unique value, âVALUEâ.\nLocationID: The âLocationIDâ column assigns a unique identifier to each location in the âLocationDescâ column.\nStratificationCategory1: The âStratificationCategory1â column categorizes data based on various demographic factors, including âRace/Ethnicity,â âEducation,â âIncome,â âAge (years),â âGender,â and âTotal.â The âNAâ values indicate missing or undefined entries in this categorization.\nStratification1: This column provides a detailed breakdown of the data based on various demographic factors, allowing for nuanced analysis and comparisons across different population segments.\nStratificationCategoryId1: The âStratificationCategoryId1â column provides unique identifiers for the categories in the âStratificationCategory1â column.\nStratificationID1: This column assigns a unique ID to each category in the Stratification1 column, enabling efficient referencing and grouping of data based on diverse demographic factors."
  }
]